use crate::{registers::Registers, stack::Stack};

const FONT: [u8; 16 * 5] = [
    0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
    0x20, 0x60, 0x20, 0x20, 0x70, // 1
    0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
    0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
    0x90, 0x90, 0xF0, 0x10, 0x10, // 4
    0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
    0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
    0xF0, 0x10, 0x20, 0x40, 0x40, // 7
    0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
    0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
    0xF0, 0x90, 0xF0, 0x90, 0x90, // A
    0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
    0xF0, 0x80, 0x80, 0x80, 0xF0, // C
    0xE0, 0x90, 0x90, 0x90, 0xE0, // D
    0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
    0xF0, 0x80, 0xF0, 0x80, 0x80, // F
];

#[derive(Debug)]
pub struct Chip8 {
    pub mem: [u8; 4096],
    pub stack: Stack,
    pub registers: Registers,
    pub pc: u16,
    pub delay_timer: u8,
    pub sound_timer: u8,
}

impl Chip8 {
    pub fn load_prg(prg: &[u8]) -> Self {
        let mut mem = [0; 4096];
        // Due to convention, font starts at 0x50
        mem[0x50..0xA0].copy_from_slice(FONT.as_slice());
        // Due to convention, program starts at 512 bytes
        let prg_start = prg.len() + 512;
        mem[512..prg_start].copy_from_slice(prg);

        let stack = Stack::new();

        let registers = Registers::new();

        Self {
            mem,
            stack,
            registers,
            pc: 512,
            delay_timer: 0,
            sound_timer: 0,
        }
    }
}
